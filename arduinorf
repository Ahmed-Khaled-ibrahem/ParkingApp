#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10  // RFID SS pin
#define RST_PIN 9  // RFID RST pin
// sck 13
// mosi 11
// miso 12
// must 3.3 v


#define GREEN_LED 7
#define RED_LED 6
#define YELLOW_LED 5

MFRC522 mfrc522(SS_PIN, RST_PIN);

const char* authorizedCards[] = { "AB CD EF 12", "98 76 54 32" };  // Modify these
const char* unauthorizedCards[] = { "11 22 33 44", "55 66 77 88" }; // Modify these
const int authorizedCount = sizeof(authorizedCards) / sizeof(authorizedCards[0]);
const int unauthorizedCount = sizeof(unauthorizedCards) / sizeof(unauthorizedCards[0]);

void setup() {
    Serial.begin(9600);
    SPI.begin();
    mfrc522.PCD_Init();

    pinMode(GREEN_LED, OUTPUT);
    pinMode(RED_LED, OUTPUT);
    pinMode(YELLOW_LED, OUTPUT);

    digitalWrite(GREEN_LED, LOW);
    digitalWrite(RED_LED, LOW);
    digitalWrite(YELLOW_LED, LOW);

    Serial.println("Scan RFID Card...");
}

void loop() {
    if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) {
        return;
    }

    String cardUID = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
        cardUID += String(mfrc522.uid.uidByte[i], HEX);
        if (i < mfrc522.uid.size - 1) cardUID += " ";
    }
    cardUID.toUpperCase();

    Serial.print("Card UID: ");
    Serial.println(cardUID);

    if (isAuthorized(cardUID)) {
        Serial.println("Authorized Access!");
        digitalWrite(GREEN_LED, HIGH);
        delay(2000);
        digitalWrite(GREEN_LED, LOW);
    } else if (isUnauthorized(cardUID)) {
        Serial.println("Unauthorized Access!");
        digitalWrite(RED_LED, HIGH);
        delay(2000);
        digitalWrite(RED_LED, LOW);
    } else {
        Serial.println("Card Not Registered!");
        digitalWrite(YELLOW_LED, HIGH);
        delay(2000);
        digitalWrite(YELLOW_LED, LOW);
    }

    mfrc522.PICC_HaltA();
    mfrc522.PCD_StopCrypto1();
}

bool isAuthorized(String uid) {
    for (int i = 0; i < authorizedCount; i++) {
        if (uid == authorizedCards[i]) {
            return true;
        }
    }
    return false;
}

bool isUnauthorized(String uid) {
    for (int i = 0; i < unauthorizedCount; i++) {
        if (uid == unauthorizedCards[i]) {
            return true;
        }
    }
    return false;
}
